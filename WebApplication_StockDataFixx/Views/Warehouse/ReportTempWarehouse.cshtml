@{
    ViewBag.Title = "Warehouse";
    Layout = "~/Views/Shared/_LayoutWarehouse.cshtml";
}
@model List<WebApplication_StockDataFixx.Models.Domain.TempWarehouseItem>


<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>@ViewBag.Title</title>

    <script type="text/javascript">

        var lastChangeSource = ""; // Initialize the lastChangeSource variable

        var js = jQuery.noConflict(true);

        js(document).ready(function () {
            js('#data-table').DataTable({
                // "paging": false // ngilangi fitur pagination
            });

            var input = js('.dataTables_filter input');
            var placeholder = 'Search items...';

            // Sembunyikan placeholder saat halaman dimuat
            input.attr('placeholder', '');

            // Tampilkan placeholder saat kotak pencarian mendapatkan fokus (klik)
            input.on('focus', function () {
                input.attr('placeholder', placeholder);
            });

            // Sembunyikan placeholder saat kotak pencarian kehilangan fokus jika tidak ada teks yang dimasukkan
            input.on('blur', function () {
                if (input.val() === '') {
                    input.attr('placeholder', '');
                }
            });

            var selectedTypeParam = new URLSearchParams(window.location.search).get('selectedType');
            var selectedMonthParam = new URLSearchParams(window.location.search).get('selectedMonth');

            // Set opsi dropdown sesuai dengan nilai selectedTypeParam
            if (!selectedTypeParam || selectedTypeParam === "ALL") {
                document.getElementById("selectedType").value = "ALL";
                updateReportTitle("ALL");
            } else if (selectedTypeParam === "VMI") {
                document.getElementById("selectedType").value = "VMI";
                updateReportTitle("VMI");
            } else if (selectedTypeParam === "NON VMI") {
                document.getElementById("selectedType").value = "NON VMI";
                updateReportTitle("NON VMI");
            } else {
                document.getElementById("selectedType").value = "Update Terbaru";
            }

            var selectedType = document.getElementById("selectedType").value;
            var selectedTypeBox = document.getElementById("selectedTypeBox");
            selectedTypeBox.textContent = selectedType;

            if (selectedMonthParam) {
                document.getElementById("selectedMonth").value = selectedMonthParam;
            }

            var selectedMonth = document.getElementById("selectedMonth").value;
            var selectedMonthBox = document.getElementById("selectedMonthBox");
            //selectedMonthBox.textContent = selectedMonth;

            var selectedMonthOption = document.querySelector("#selectedMonth option:checked");

            if (selectedMonthOption.value === "Latest Uploaded Month") {
                selectedMonthBox.textContent = "Latest Uploaded Month";
            } else {
                selectedMonthBox.textContent = selectedMonthOption.textContent;
            }
        });

        function filterDataByMonth() {
            var selectedMonth = document.getElementById("selectedMonth").value;
            var selectedType = document.getElementById("selectedType").value;

            var url = "/Warehouse/ReportTempWarehouse";

            if (selectedType === "ALL") {
                lastChangeSource = "month";
                url += "?selectedMonth=" + encodeURIComponent(selectedMonth);
            } else {
                lastChangeSource = "type";
                url += "?selectedMonth=" + encodeURIComponent(selectedMonth) + "&selectedType=" + encodeURIComponent(selectedType);
            }

            window.location.href = url;
        }

        function changeTypeDropdown(selectedType) {
            lastChangeSource = "type";
            document.getElementById("selectedType").value = selectedType;

            // Tambahkan kondisi untuk mengubah teks "Selected Type" menjadi "ALL" jika pilihan adalah "Pilih_Tipe"
            var selectedTypeText = document.getElementById("selectedTypeText");
            if (selectedType === "Pilih_Tipe") {
                selectedTypeText.textContent = "ALL";
            } else {
                selectedTypeText.textContent = selectedType;
            }

            filterDataByMonth();
        }


        function updateReportTitle(selectedType) {
            var titleElement = document.getElementById("reportTitle");
            if (titleElement) {
                if (selectedType === "ALL") {
                    titleElement.textContent = "Report Data @ViewBag.Title ALL";
                } else if (selectedType === "VMI") {
                    titleElement.textContent = "Report Data @ViewBag.Title VMI";
                } else if (selectedType === "NON VMI") {
                    titleElement.textContent = "Report Data @ViewBag.Title Non VMI";
                } else {
                    titleElement.textContent = "Report Data @ViewBag.Title Update Terbaru";
                }
            }
        }

        // ...
        function filterData() {
            // Get the selected type from the dropdown
            var selectedType = document.getElementById("selectedType").value;

            // Get the AccessPlant value from the ViewBag
            var accessPlantValue = "@(ViewBag.AccessPlant)";

            // Redirect to the ReportTempWarehouse action with the selected type and AccessPlant as query parameters
            window.location.href = "/Warehouse/ReportTempWarehouse?selectedType=" + encodeURIComponent(selectedType) + "&accessPlant=" + encodeURIComponent(accessPlantValue);
        }
        // ...


        function downloadExcel() {
            // Dapatkan nilai input nomor seri
            var serialNoInput = document.getElementById("serialNoInput").value;

            // Redirect to the Warehouse/DownloadExcel action with the serial number as a query parameter
            window.location.href = "/Warehouse/DownloadExcel?serialNo=" + encodeURIComponent(serialNoInput);
        }

        function updateReportTitle(selectedType) {
            var titleElement = document.getElementById("reportTitle");
            if (titleElement) {
                if (selectedType === "ALL") {
                    titleElement.textContent = "Report Data @ViewBag.Title ALL";
                } else if (selectedType === "VMI") {
                    titleElement.textContent = "Report Data @ViewBag.Title VMI";
                } else if (selectedType === "NON VMI") {
                    titleElement.textContent = "Report Data @ViewBag.Title Non VMI";
                }
            }
        }

        function validateSerialNumber() {
            var serialNoInput = document.getElementById("serialNoInput").value;
            if (!serialNoInput) {
                alert("Please enter a serial number before downloading the file.");
            } else {
                // Serial number is entered, proceed with the download
                downloadExcel();
            }
        }



        //Popup Loader
        function showLoadingPopup() {
            document.getElementById("loading-popup").style.display = "flex";
        }

        // Function to hide the loading popup
        function hideLoadingPopup() {
            document.getElementById("loading-popup").style.display = "none";
        }

        // Function to check the network status
        function checkNetworkStatus() {
            var online = navigator.onLine;

            if (online) {
                // Connection is restored, hide the loading popup
                hideLoadingPopup();
            } else {
                // Connection is lost, show the loading popup
                showLoadingPopup();
            }
        }

        // Add an event listener to check network status on page load
        window.addEventListener('load', checkNetworkStatus);

        // Add an event listener to check network status when the connection changes
        window.addEventListener('online', checkNetworkStatus);
        window.addEventListener('offline', checkNetworkStatus);
    </script>

</head>
<body>

    @*@Populoader@*@
    <div id="loading-popup" class="loading-popup">
        <div class="custom-loader"></div>
    </div>



    <div class="container-fluid p-0">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h1 id="reportTitle" class="h3 mb-0"><strong>Report Data @ViewBag.Title</strong></h1>


            <div class="select-month" style="margin-left: 10px;">
                <label style="margin-right: 5px;">Select Month :</label>

                @*@jika menggunakan kolom last Upload@*@
                <select id="selectedMonth" onchange="filterDataByMonth()">
                    <option value="Latest Uploaded Month">Latest Uploaded Month</option>
                    @foreach (var month in ViewBag.LastUpload)
                    {
                        <option value="@month.ToString("yyyy-MM")">@month.ToString("MMMM yyyy")</option>
                    }
                </select>

            </div>

            <div class="select-month" style="margin-left: 10px;">
                <label style="margin-right: 5px;">Select Warehouse :</label>
                <select id="selectedType" onchange="filterData()">
                    <option value="ALL">ALL</option>
                    <option value="VMI">VMI</option>
                    <option value="NON VMI">NON VMI</option>
                </select>
            </div>

        </div>
    </div>

    <br />


    <!-- Tampilkan kotak tampilan bulan yang dipilih -->


    <div class="row  mb-10" style="margin-top:70px;">

        <div class="row d-flex align-items-start">
            <div class="col">
                <div class="selected-type-box" style="margin-left: 10px; width:300px; margin-bottom: 10px;">
                    @*<strong>Pilihan Tipe : </strong>*@
                    <strong>
                        <span id="selectedTypeBox"></span>
                    </strong>
                </div>

                <div class="selected-month-box" style="margin-left: 10px; width: 300px; margin-bottom: 10px;">
                    @*<strong>Pilihan Bulan : </strong>*@
                    <strong>
                        <span id="selectedMonthBox"></span>
                    </strong>
                </div>
            </div>
        </div>




        <div class="col-md-12">
            @*<div class="card w-100 h-100">*@
            @*  <div class="card-body">*@
            <table class="display" width="100%" height="100%" id="data-table">
                <thead>
                    <tr>
                        <th>Serial Number</th>
                        <th>Tag No</th>
                        <th>Material</th>
                        <th>Material Description</th>
                        <th>Actual Qty</th>
                        <th>Unit</th>
                        <th>StockType</th>
                        <th>Vendor Code</th>
                        <th>Vendor Name</th>
                        <th>Issue Planner</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Serial Number</th>
                        <th>Tag No</th>
                        <th>Material</th>
                        <th>Material Description</th>
                        <th>Actual Qty</th>
                        <th>Unit</th>
                        <th>Stock Type</th>
                        <th>Vendor Code</th>
                        <th>Vendor Name</th>
                        <th>Issue Planner</th>
                    </tr>
                </tfoot>
                <tbody>
                    @if (Model != null && Model.Count > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.SerialNo</td>
                                <td>@item.TagNo</td>
                                <td>@item.Material</td>
                                <td>@item.MaterialDesc</td>
                                <th>@(item.ActualQty.ToString())</th>
                                <td>@item.Unit</td>
                                <td>@item.StockType</td>
                                <td>@(item.VendorCode != "-" ? item.VendorCode : "-")</td>
                                <td>@(item.VendorName != "-" ? item.VendorName : "-")</td>
                                <td>@item.IssuePlanner</td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
    <br />
    <div style="margin-bottom: 5px;"></div>


    <div class="download-float-button">
        <button id="open-popup">Download <i class="fas fa-download"></i></button>
        <div id="popup" class="popup popup-dow">
            <div class="popup-content popup-content-dow ">
                <div class="popup-header popup-header-dow">
                    <h3>Download File Excel</h3>
                    <a id="close-popup-dow" class="btn close-popup-dow">&times;</a>
                </div>
                <div class="popup-body popup-body-dow">
                    <input type="text" class="input-rounded" id="serialNoInput" placeholder="Enter Serial Number">
                    <button class="btn btn-dow" id="download-button" onclick="validateSerialNumber()">Download file .xls</button>
                </div>
            </div>
        </div>
    </div>

    <div style="margin-bottom: 70px;"></div>

    <script>
        // POPUP
        // Function to open the popup
        document.getElementById('open-popup').addEventListener('click', function () {
            document.getElementById('popup').style.display = 'block';
            document.getElementById('overlay').style.display = 'block'; // Menampilkan overlay
        });

        // Function to close the popup and hide the overlay
        document.getElementById('close-popup-dow').addEventListener('click', function () {
            document.getElementById('popup').style.display = 'none';
            document.getElementById('overlay').style.display = 'none'; // Menyembunyikan overlay
        });

    </script>

</body>
</html>