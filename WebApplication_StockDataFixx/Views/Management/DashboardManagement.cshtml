@{
    ViewBag.Title = "Stock Taking Report";
    Layout = "~/Views/Shared/_LayoutManagement.cshtml";
}

<div class="container">
    <div class="row align-items-center justify-content-between mb-3">
        <div class="col">
            <h2 style="font-weight: 800; font-family: sans-serif;">Dashboard @ViewData["Title"]</h2>
        </div>
        <div class="col-auto">
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Select Month
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" data-month="01">January</a>
                    <a class="dropdown-item" data-month="02">February</a>
                    <a class="dropdown-item" data-month="03">March</a>
                    <a class="dropdown-item" data-month="04">April</a>
                    <a class="dropdown-item" data-month="05">May</a>
                    <a class="dropdown-item" data-month="06">June</a>
                    <a class="dropdown-item" data-month="07">July</a>
                    <a class="dropdown-item" data-month="08">August</a>
                    <a class="dropdown-item" data-month="09">September</a>
                    <a class="dropdown-item" data-month="10">October</a>
                    <a class="dropdown-item" data-month="11">November</a>
                    <a class="dropdown-item" data-month="12">December</a>
                </div>
            </div>
        </div>
    </div>

    @*CHART WAREHOUSE*@


    <h4 class="TitleChart">Grafik Chart Warehouse</h4>
    <div class="row">
        <div class="col-sm-4">
            <div class="card chart-card">
                <div class="card-body">
                    <canvas id="chart1"></canvas>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="card chart-card">
                <div class="card-body">
                    <canvas id="chart2"></canvas>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="card chart-card">
                <div class="card-body">
                    <p>Total Units Distribution VMI</p>
                    <canvas id="chart3"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top: 120px;">
        <div class="col-sm-4">
            <div class="card chart-card">
                <div class="card-body">
                    <p>Total Units Distribution Non VMI</p>
                    <canvas id="chart4"></canvas>
                </div>
            </div>
        </div>
    </div>

    @*CHART PRODUCTION*@

    <div class="row" style="margin-top: 120px;">
        <h4 class="TitleChart" style="margin-top: 80px;">Grafik Chart Production</h4>
        <div class="col-sm-4">
            <div class="card chart-card">
                <div class="card-body">
                    <canvas id="chart5"></canvas>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="card chart-card">
                <div class="card-body">
                    <canvas id="chart6"></canvas>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="card chart-card">
                <div class="card-body">
                    <p>Total Units Distribution Production</p>
                    <canvas id="chart7"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    Chart.debug = true;

    const chart1 = document.getElementById('chart1');
    const chart2 = document.getElementById('chart2');
    const chart3 = document.getElementById('chart3');
    const chart4 = document.getElementById('chart4');
    const chart5 = document.getElementById('chart5');
    const chart6 = document.getElementById('chart6');
    const chart7 = document.getElementById('chart7');
    let selectedMonth = "";


    // Warehouse
    function fetchChartDataWrh() {
        fetch(`/Management/GetChartDataWrh?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart1(data);
            })
            .catch(error => {
                console.error('Error fetching chart data:', error);
            });
    }
    function fetchChartData2Wrh() {
        fetch(`/Management/GetChart2DataWrh?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart2(data);
            })
            .catch(error => {
                console.error('Error fetching chart data:', error);
            });
    }

    // Function to fetch chart data from the server for the third chart
    function fetchChart3DataWrh() {
        fetch(`/Management/GetChart3DataWrh?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart3(data);
            })
            .catch(error => {
                console.error('Error fetching chart 3 data:', error);
            });
    }
    // Function to fetch chart data from the server for the first two charts
    function fetchChart4DataWrh() {
        fetch(`/Management/GetChart4DataWrh?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart4(data);
            })
            .catch(error => {
                console.error('Error fetching chart data:', error);
            });
    }



    // Production

    function fetchChartDataProd() {
        fetch(`/Management/GetChartDataProd?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart5(data);
            })
            .catch(error => {
                console.error('Error fetching chart 2 data:', error);
            });
    }
    function fetchChartData2Prod() {
        fetch(`/Management/GetChart2DataProd?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart6(data);
            })
            .catch(error => {
                console.error('Error fetching chart 2 data:', error);
            });
    }
    function fetchChartData3Prod() {
        fetch(`/Management/GetChart3DataProd?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart7(data);
            })
            .catch(error => {
                console.error('Error fetching chart 2 data:', error);
            });
    }



    // Warehouse

    function updateChart1(data) {
        const ctx = chart1.getContext('2d');
        if (window.chart1Instance) {
            window.chart1Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        window.chart1Instance = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['VMI', 'NonVMI'],
                datasets: [{
                    label: `Total Count Data for ${getMonthName(selectedMonth)}`,
                    data: data,
                    borderWidth: 2,
                    backgroundColor: ['#36A2EB', '#FF6384']
                }]

            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }



    function updateChart2(data) {
        const ctx = chart2.getContext('2d');
        if (window.chart2Instance) {
            window.chart2Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        window.chart2Instance = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['VMI', 'Non VMI'],
                datasets: [{
                    label: `Total ActualQty for ${getMonthName(selectedMonth)}`,
                    data: data,
                    borderWidth: 2,
                    backgroundColor: ['#36A2EB', '#FF6384']
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }


    // Function to update Chart 3 (VMI)
    function updateChart3(data) {
        const ctx = chart3.getContext('2d');
        if (window.chart3Instance) {
            window.chart3Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        window.chart3Instance = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['K', 'PC', 'SET', 'G', 'KG', 'M', 'ML', 'ROLL'],
                datasets: [
                    {
                        label: `Unit Distribution VMI for ${getMonthName(selectedMonth)}`,
                        data: data,
                        borderWidth: 2,
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#E91E63', '#2196F3', '#FFA07A', '#FFD700'],
                    },
                ],
            },
            options: {
                cutout: '50%',
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                },
            },
        });
    }

    // Function to update Chart 4 (NonVMI)
    function updateChart4(data) {
        const ctx = chart4.getContext('2d');
        if (window.chart4Instance) {
            window.chart4Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        window.chart4Instance = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['K', 'PC', 'SET', 'G', 'KG', 'M', 'ML', 'ROLL'],
                datasets: [
                    {
                        label: `Unit Distribution NonVMI for ${getMonthName(selectedMonth)}`,
                        data: data,
                        borderWidth: 2,
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#E91E63', '#2196F3', '#FFA07A', '#FFD700'],
                    },
                ],
            },
            options: {
                cutout: '50%',
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                },
            },
        });
    }



    //Production

    function updateChart5(data) {
        const ctx = chart5.getContext('2d');
        if (window.chart5Instance) {
            window.chart5Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        window.chart5Instance = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Total Product(Month)', 'Total All Product'],
                datasets: [{
                    label: `Total All Product for ${getMonthName(selectedMonth)}`,
                    data: data, // Menggunakan data.TotalItems
                    borderWidth: 2,
                    backgroundColor: ['#36A2EB', '#FF6384']
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    function updateChart6(data) {
        const ctx = chart6.getContext('2d');
        if (window.chart6Instance) {
            window.chart6Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        window.chart6Instance = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Ttl ActualQty(Month)', 'Total All ActualQty'],
                datasets: [{
                    label: `Total ActualQty for ${getMonthName(selectedMonth)}`,
                    data: data, // Menggunakan data.TotalItems
                    borderWidth: 2,
                    backgroundColor: ['#36A2EB', '#FF6384']
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }



    // Function to update Chart 3
    function updateChart7(data) {
        const ctx = chart7.getContext('2d');
        if (window.chart7Instance) {
            window.chart7Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        window.chart7Instance = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['K', 'PC', 'SET', 'G', 'KG', 'M', 'ML', 'ROLL'],
                datasets: [
                    {
                        label: `Unit Distribution Production for ${getMonthName(selectedMonth)}`,
                        data: data,
                        borderWidth: 2,
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#E91E63', '#2196F3', '#FFA07A', '#FFD700'],
                    },
                ],
            },
            options: {
                cutout: '50%',
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                },
            },
        });
    }


    // Function to convert month number to name
    function getMonthName(month) {
        const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
        return monthNames[parseInt(month) - 1];
    }

    fetchChartDataWrh();
    fetchChartData2Wrh();
    fetchChart3DataWrh();
    fetchChart4DataWrh();
    fetchChartDataProd();
    fetchChartData2Prod();
    fetchChartData3Prod();


    const dropdownButton = document.getElementById('dropdownMenuButton');
    const dropdownItems = document.querySelectorAll('.dropdown-item');

    dropdownItems.forEach(item => {
        item.addEventListener('click', function () {
            const month = this.dataset.month;
            selectedMonth = month;
            updateActiveMonth(month);
            updateCharts()
        });
    });

    function updateCharts() {
        fetchChartDataWrh();
        fetchChartData2Wrh();
        fetchChart3DataWrh();
        fetchChart4DataWrh();
        fetchChartDataProd();
        fetchChartData2Prod();
        fetchChartData3Prod();
    }

    function updateActiveMonth(month) {
        dropdownButton.textContent = getMonthName(month);
        dropdownItems.forEach(item => {
            item.classList.remove('active');
        });
        const activeItem = document.querySelector(`[data-month='${month}']`);
        activeItem.classList.add('active');
    }
</script>
