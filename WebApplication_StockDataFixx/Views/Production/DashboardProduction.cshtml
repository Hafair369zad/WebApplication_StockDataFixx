@{
    ViewData["Title"] = "Production";
    Layout = "~/Views/Shared/_LayoutProduction.cshtml";
}

@*Populoader*@
<div id="loading-popup" class="loading-popup">
    <div class="custom-loader"></div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

@*baru*@

<div class="container-fluid p-0">
    <div class="d-flex justify-content-between">
        <div class="card-title" style="margin-bottom: 20px; font-weight: 800;">
            <h3>DASHBOARD STOCK TAKING PRODUCTION</h3>
        </div>
        <div></div>
    </div>

    @*Baris Chart Kedua*@
    <div class="row mt-4">
        <div class="col-md-8">
            <div class="card grafik1">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3 header-chart">
                        <div>
                            <h5 class="card-title mb-1">Total Actual Qty</h5>
                            <p class="card-text">Per Month</p>
                        </div>
                        <div class="dropdown">
                            @*<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Select Year
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" id="yearDropdown">
                            <a class="dropdown-item"  data-year="2022">2022</a>
                            <a class="dropdown-item"  data-year="2023">2023</a>
                            <a class="dropdown-item"  data-year="2024">2024</a>
                            <a class="dropdown-item"  data-year="2025">2025</a>
                            <!-- Tambahkan opsi tahun lainnya sesuai kebutuhan -->
                            </div>*@
                        </div>
                    </div>
                    <canvas id="grafik1"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3 header-chart">
                        <div>
                            <h5 class="card-title mb-1" style="color: #4EA652; font-size: 20px;">PRODUCTION</h5>
                            <p class="card-text">Total Per UoM</p>
                        </div>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Select Month
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item" data-month="01">January</a>
                                <a class="dropdown-item" data-month="02">February</a>
                                <a class="dropdown-item" data-month="03">March</a>
                                <a class="dropdown-item" data-month="04">April</a>
                                <a class="dropdown-item" data-month="05">May</a>
                                <a class="dropdown-item" data-month="06">June</a>
                                <a class="dropdown-item" data-month="07">July</a>
                                <a class="dropdown-item" data-month="08">August</a>
                                <a class="dropdown-item" data-month="09">September</a>
                                <a class="dropdown-item" data-month="10">October</a>
                                <a class="dropdown-item" data-month="11">November</a>
                                <a class="dropdown-item" data-month="12">December</a>
                            </div>
                        </div>
                    </div>
                    <canvas id="chart3"></canvas>
                </div>
            </div>
        </div>
    </div>

    @*Baris Chart Ketiga*@
    <div class="row mt-4">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3 header-chart">
                        <div>
                            <h5 class="card-title mb-1">Total Part Number - Stock Taking</h5>
                            <p class="card-text">Per Month</p>
                        </div>
                        <div class="dropdown">
                            @* <button class="btn btn-primary dropdown-toggle btn-typeChart" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            VMI
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item active" value="VMI">VMI</a>
                            <a class="dropdown-item" value="NonVMI">NON VMI</a>
                            </div>*@
                        </div>
                    </div>
                    <canvas id="grafik2"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<div style="margin-top: 50px;"></div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    //$(document).ready(function () {
    Chart.debug = true;
    const chart3 = document.getElementById('chart3');
    let selectedMonth = "";

    // Function to fetch chart data from the server for the third chart
    function fetchChart3Data() {
        fetch(`/Production/GetChart3Data?selectedMonth=${selectedMonth}`)
            .then(response => response.json())
            .then(data => {
                updateChart3(data);
            })
            .catch(error => {
                console.error('Error fetching chart 2 data:', error);
            });
    }

    // Function to update Chart 3
    function getRandomColor() {
        const letters = '0123456789ABCDEF';
        let color = '#';
        for (let i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    function updateChart3() {
        const ctx = chart3.getContext('2d');
        if (window.chart3Instance) {
            window.chart3Instance.destroy(); // Hancurkan objek Chart yang ada
        }

        // Menggunakan AJAX untuk mendapatkan data dari controller GetChart3Data
        $.ajax({
            url: '/Production/GetChart3Data',
            method: 'GET',
            data: { selectedMonth: selectedMonth }, // Anda perlu mengganti ControllerName dengan nama controller yang sesuai
            success: function (data) {
                const backgroundColors = data.labels.map(() => getRandomColor());

                window.chart3Instance = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: data.labels,
                        datasets: [
                            {
                                label: `Unit Distribution Production for ${getMonthName(selectedMonth)}`,
                                data: data.values,
                                borderWidth: 2,
                                backgroundColor: backgroundColors,
                            },
                        ],
                    },
                    options: {
                        cutout: '50%',
                        plugins: {
                            legend: {
                                position: 'bottom',
                            },
                        },
                    },
                });
            },
            error: function () {
                console.log('Failed to retrieve data for Chart 3');
            }
        });
    }




    //function updateChart3(data) {
    //    const ctx = chart3.getContext('2d');
    //    if (window.chart3Instance) {
    //        window.chart3Instance.destroy(); // Hancurkan objek Chart yang ada
    //    }

    //    window.chart3Instance = new Chart(ctx, {
    //        type: 'doughnut',
    //        data: {
    //            labels: ['K', 'PC', 'SET', 'G', 'KG', 'M', 'ML', 'ROLL'],
    //            datasets: [
    //                {
    //                    label: `Unit Distribution Production for ${getMonthName(selectedMonth)}`,
    //                    data: data,
    //                    borderWidth: 2,
    //                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#E91E63', '#2196F3', '#FFA07A', '#FFD700'],
    //                },
    //            ],
    //        },
    //        options: {
    //            cutout: '50%',
    //            plugins: {
    //                legend: {
    //                    position: 'bottom',
    //                },
    //            },
    //        },
    //    });
    //}


    // Function to convert month number to name
    function getMonthName(month) {
        const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
        return monthNames[parseInt(month) - 1];
    }

    fetchChart3Data();

    const dropdownButton = document.getElementById('dropdownMenuButton');
    const dropdownItems = document.querySelectorAll('.dropdown-item');

    dropdownItems.forEach(item => {
        item.addEventListener('click', function () {
            const month = this.dataset.month;
            selectedMonth = month;
            updateActiveMonth(month);
            updateCharts()
        });
    });

    function updateCharts() {
        fetchChart3Data();
    }

    function updateActiveMonth(month) {
        dropdownButton.textContent = getMonthName(month);
        dropdownItems.forEach(item => {
            item.classList.remove('active');
        });
        const activeItem = document.querySelector(`[data-month='${month}']`);
        activeItem.classList.add('active');
    }


    //Popup Loader
    function showLoadingPopup() {
        document.getElementById("loading-popup").style.display = "flex";
    }

    // Function to hide the loading popup
    function hideLoadingPopup() {
        document.getElementById("loading-popup").style.display = "none";
    }

    // Function to check the network status
    function checkNetworkStatus() {
        var online = navigator.onLine;

        if (online) {
            // Connection is restored, hide the loading popup
            hideLoadingPopup();
        } else {
            // Connection is lost, show the loading popup
            showLoadingPopup();
        }
    }

    // Add an event listener to check network status on page load
    window.addEventListener('load', checkNetworkStatus);

    // Add an event listener to check network status when the connection changes
    window.addEventListener('online', checkNetworkStatus);
    window.addEventListener('offline', checkNetworkStatus);


    // Grafik Chart

    // Grafik Chart 1 Total Actual Qty
    var dataBar = {
        labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        datasets: [
            {
                label: "PRODUCTION",
                backgroundColor: "#4EA652",
                data: [] // Data VMI akan diisi dari hasil controller
            },
            //{
            //    label: "PRODUCTION ALL PLANT",
            //    backgroundColor: "rgba(0, 0, 0, 1)",
            //    data: [] // Data VMI akan diisi dari hasil controller
            //}
            //{
            //    label: "PRODUCTION ALL",
            //    type: "line",
            //    borderColor: "rgba(0, 0, 0, 1)",
            //    borderWidth: 1,
            //    data: [] // Data Total ActualQty akan diisi dari hasil controller
            //}
        ]
    };

    // Opsi konfigurasi grafik
    var options = {
        scales: {
            x: {
                beginAtZero: true
            },
            y: {
                beginAtZero: true
            }
        }
    };

    // Ambil data dari controller
    $.get("/Production/GetChart2Data?year=2023", function (data) {
        // Mengisi data grafik dengan hasil dari controller
        dataBar.datasets[0].data = data.map(item => item[0]); 
        //dataBar.datasets[1].data = data.map(item => item[1]); 

        // Buat grafik dengan data yang telah diisi
        var ctxBar = document.getElementById("grafik1").getContext("2d");
        var myChartBar = new Chart(ctxBar, {
            type: "bar",
            data: dataBar,
            options: options
        });
    });







    // Grafik Chart 2 Total Count Data
    //var dataBar2 = {
    //    labels: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"],
    //    datasets: [
    //        {
    //            label: "PRODUCTION",
    //            backgroundColor: "#4EA652",
    //            data: [] // Data VMI akan diisi dari hasil controller
    //        },
    //        {
    //            label: "PRODUCTION ALL PLANT",
    //            backgroundColor: "rgba(0, 0, 0, 1)",
    //            data: [] // Data VMI akan diisi dari hasil controller
    //        }
    //        //{
    //        //    label: "PRODUCTION ALL",
    //        //    type: "line",
    //        //    borderColor: "rgba(0, 0, 0, 1)",
    //        //    borderWidth: 1,
    //        //    data: [] // Data Total ActualQty akan diisi dari hasil controller
    //        //}
    //    ]
    //};

    //// Opsi konfigurasi grafik
    //var options = {
    //    scales: {
    //        x: {
    //            beginAtZero: true
    //        },
    //        y: {
    //            beginAtZero: true
    //        }
    //    }
    //};

    //// Ambil data dari controller
    //$.get("/Production/GetChartData?year=2023", function (data) {
    //    // Mengisi data grafik dengan hasil dari controller
    //    dataBar2.datasets[0].data = data.map(item => item[0]); // Data VMI
    //    dataBar2.datasets[1].data = data.map(item => item[1]); // Data Non VMI

    //    // Buat grafik dengan data yang telah diisi
    //    var ctxBar2 = document.getElementById("grafik2").getContext("2d");
    //    var myChartBar2 = new Chart(ctxBar2, {
    //        type: "bar",
    //        data: dataBar2,
    //        options: options
    //    });
    //});




    var dataBar2 = {
        labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        datasets: []  // Modify the datasets array
    };

    // Update the chart data
    $.get("/Production/GetChartData?year=2023", function (data) {
        var slocList = Object.keys(data[0]); // Get Sloc values from the first month's data

        for (var i = 0; i < slocList.length; i++) {
            var dataset = {
                label: slocList[i],
                backgroundColor: getRandomColor(), // Define a function to generate random colors
                data: data.map(item => item[slocList[i]])
            };

            dataBar2.datasets.push(dataset);
        }

        // Create the chart with updated data
        var ctxBar2 = document.getElementById("grafik2").getContext("2d");
        var myChartBar2 = new Chart(ctxBar2, {
            type: "bar",
            data: dataBar2,
            options: {
                scales: {
                    x: { stacked: true },
                    y: { stacked: true }
                }
            }
        });
    });



    function getRandomColor() {
        var letters = "0123456789ABCDEF";
        var color = "#";
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }




    // Dropwon Chart
    $(document).ready(function () {
        // Ketika item dropdown dipilih
        $(".dropdown-item").click(function () {
            // Hapus kelas active dari semua item dropdown
            $(".dropdown-item").removeClass("active");

            // Tambahkan kelas active ke item yang dipilih
            $(this).addClass("active");

            // Ambil nilai (value) dari item yang dipilih
            var selectedValue = $(this).attr("value");

            // Ganti teks pada tombol dropdown dengan nilai yang dipilih
            $(".btn-typeChart").text(selectedValue);

            // Anda juga dapat melakukan tindakan lain sesuai kebutuhan di sini

            // Contoh: Cetak nilai yang dipilih ke konsol
            console.log("Anda memilih: " + selectedValue);
        });
    });
        // End Dropdown Chart


</script>



@*perbaiki kalimat berikut agar mudah dipahami : 

atur ketika masuk pertama kali ke DashboardProduction, card masih menempilkan kosong atau belum menampilkan chart, baru chart bisa tampil ketika sudah memilih menu dropdown bulan. saya ingin mangatur ketika masuk pertama kali ke halaman DashboardProduction pertama kali langsung menampilkan chart bulan saat ini secara real time , dan menu dropdown bulan saat ini secara real time aktif dan masih bisa menampilkan chart bulan lainnya ketika memilih menu dropdown bulan lainnya  : 
*@


